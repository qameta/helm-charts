apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "allure-ee.gateway.fullname" . }}
  labels:
    app: {{ template "allure-ee.gateway.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.gateway.replicaCount }}
  strategy:
{{ toYaml .Values.gateway.strategy | indent 4 }}
  selector:
    matchLabels:
      app: {{ template "allure-ee.gateway.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "allure-ee.gateway.fullname" . }}
    spec:
{{- if .Values.serviceAccount.create }}
      serviceAccount: {{ .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{- end }}
{{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
{{- end }}
      tolerations:
{{ toYaml .Values.gateway.tolerations | indent 8 }}
      containers:
      - name: {{ template "allure-ee.gateway.fullname" . }}
        image: {{ .Values.gateway.image.repository }}:{{ .Values.version }}
        imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
        env:
{{- range $name, $value := .Values.gateway.env.open }}
        - name: {{ $name | quote }}
          value: {{ $value | quote }}
{{- end }}
{{- $secret_name := include "allure-ee.fullname" . }}
{{- range $name, $value := .Values.gateway.env.secret }}
{{- if not (empty $value) }}
        - name: {{ $name | quote }}
          valueFrom:
            secretKeyRef:
              name: {{ $secret_name }}
              key: {{ printf "%s.%s" "gateway" $name | quote }}
{{- end }}
{{- end }}
{{- if .Values.gateway.probes.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: /management/health
            port: http
{{ toYaml .Values.gateway.probes.liveness.probe | indent 10 }}
{{- end }}
{{- if .Values.gateway.probes.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: /management/health
            port: http
{{ toYaml .Values.gateway.probes.readiness.probe | indent 10 }}
{{- end }}
{{- if .Values.gateway.probes.startup.enabled }}
        startupProbe:
          httpGet:
            path: /management/health
            port: http
{{ toYaml .Values.gateway.probes.startup.probe | indent 10 }}
{{- end }}
{{- with .Values.gateway.resources }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}
